MyMediaLite item recommendation from positive-only feedback 3.05

 usage:   item_recommendation --training-file=FILE --recommender=METHOD [OPTIONS]

   methods (plus arguments and their defaults):
   - BPRMF num_factors=10 bias_reg=0 reg_u=0.0025 reg_i=0.0025 reg_j=0.00025 num_iter=30 learn_rate=0.05 uniform_user_sampling=True with_replacement=False fast_sampling_memory_limit=1024 update_j=True
       supports --find-iter=N, --online-evaluation
   - ItemAttributeKNN k=80 correlation=Cosine q=1 weighted=False alpha=0.5 (only for BidirectionalConditionalProbability)
       needs --item-attributes=FILE
   - ItemKNN k=80 correlation=Cosine q=1 weighted=False alpha=0.5 (only for BidirectionalConditionalProbability)
   - MostPopular by_user=False
       supports --online-evaluation
   - Random
   - UserAttributeKNN k=80 correlation=Cosine q=1 weighted=False alpha=0.5 (only for BidirectionalConditionalProbability)
       needs --user-attributes=FILE
   - UserKNN k=80 correlation=Cosine q=1 weighted=False alpha=0.5 (only for BidirectionalConditionalProbability)
   - WRMF num_factors=10 regularization=0.015 alpha=1 num_iter=15
       supports --find-iter=N, --online-evaluation
   - Zero
   - MultiCoreBPRMF num_factors=10 bias_reg=0 reg_u=0.0025 reg_i=0.0025 reg_j=0.00025 num_iter=30 learn_rate=0.05 uniform_user_sampling=True with_replacement=False fast_sampling_memory_limit=1024 update_j=True max_threads=100
       supports --find-iter=N, --online-evaluation
   - SoftMarginRankingMF num_factors=10 bias_reg=0 reg_u=0.0025 reg_i=0.0025 reg_j=0.00025 num_iter=30 learn_rate=0.1 fast_sampling_memory_limit=1024
       supports --find-iter=N, --online-evaluation
   - WeightedBPRMF num_factors=10 bias_reg=0 reg_u=0.0025 reg_i=0.0025 reg_j=0.00025 num_iter=30 learn_rate=0.05
       supports --find-iter=N, --online-evaluation
   - BPRLinear reg=0.015 num_iter=10 learn_rate=0.05 fast_sampling_memory_limit=1024
       needs --item-attributes=FILE
       supports --find-iter=N
   - ItemAttributeSVM c=1 gamma=0.002
       needs --item-attributes=FILE
   - BPRMF_Mapping num_factors=10 reg_u=0.0025 reg_i=0.0025 reg_j=0.00025 num_iter=30 learn_rate=0.05 reg_mapping=0.1 num_iter_mapping=10 learn_rate_mapping=0.01 init_mean=0 init_stddev=0.1
       needs --user-attributes=FILE, --item-attributes=FILE
       supports --find-iter=N, --online-evaluation
   - MostPopularByAttributes
       needs --item-attributes=FILE
   - CLiMF num_factors=10 regularization=0 num_iter=30 learn_rate=0.01
       supports --find-iter=N, --online-evaluation
   - BPRSLIM reg_i=0.0025 reg_j=0.00025 num_iter=15 learn_rate=0.05 uniform_user_sampling=True with_replacement=False fast_sampling_memory_limit=1024 update_j=True
       supports --find-iter=N, --online-evaluation
   - LeastSquareSLIM reg_l1=0.01 reg_l2=0.001 num_iter=15 K=50
       supports --find-iter=N, --online-evaluation
  method ARGUMENTS have the form name=value

  general OPTIONS:
   --recommender=METHOD             use METHOD for recommendations (default: MostPopular)
   --group-recommender=METHOD       use METHOD to combine the predictions for several users
   --recommender-options=OPTIONS    use OPTIONS as recommender options
   --help                           display this usage information and exit
   --version                        display version information and exit
   --random-seed=N                  initialize random number generator with N

  files:
   --training-file=FILE                     read training data from FILE
   --test-file=FILE                         read test data from FILE
   --file-format=ignore_first_line|default
   --no-id-mapping                          do not map user and item IDs to internal IDs, keep the original IDs
   --data-dir=DIR                           load all files from DIR
   --user-attributes=FILE                   file with user attribute information, 1 tuple per line
   --item-attributes=FILE                   file with item attribute information, 1 tuple per line
   --user-relations=FILE                    file with user relation information, 1 tuple per line
   --item-relations=FILE                    file with item relation information, 1 tuple per line
   --user-groups=FILE                       file with group-to-user mappings, 1 tuple per line
   --save-model=FILE                        save computed model to FILE
   --load-model=FILE                        load model from FILE

  data interpretation:
   --user-prediction            transpose the user-item matrix and perform user prediction instead of item prediction
   --rating-threshold=NUM       (for rating data) interpret rating >= NUM as positive feedback

  choosing the items for evaluation/prediction (mutually exclusive):
   --candidate-items=FILE       use items in FILE (one per line) as candidate items
   --overlap-items              use only items that are both in the training and the test set as candidate items
   --in-training-items          use only items in the training set as candidate items
   --in-test-items              use only items in the test set as candidate items
   --all-items                  use all known items as candidate items
  The default is to use both the items in the training and the test set as candidate items.

  choosing the users for evaluation/prediction
   --test-users=FILE            predict items for users specified in FILE (one user per line)

  prediction and evaluation:
   --predict-items-number=N     predict N items per user
   --repeated-items             items accessed by a user before may be in the recommendations (and are not ignored in the evaluation)

  prediction:
   --prediction-file=FILE       write ranked predictions to FILE, one user per line

  evaluation:
   --cross-validation=K         perform k-fold cross-validation on the training data
   --test-ratio=NUM             evaluate by splitting of a NUM part of the feedback
   --num-test-users=N           evaluate on only N randomly picked users (to save time)
   --online-evaluation          perform online evaluation (use every tested user-item combination for incremental training)
   --compute-fit                display fit on training data

  finding the right number of iterations (iterative methods)
   --find-iter=N                give out statistics every N iterations
   --num-iter=N                 start measuring at N iterations
   --max-iter=N                 perform at most N iterations
   --measure=MEASURE            the evaluation measure to use for the abort conditions below (default is AUC)
   --epsilon=NUM                abort iterations if MEASURE is less than best result plus NUM
   --cutoff=NUM                 abort if MEASURE is below NUM

